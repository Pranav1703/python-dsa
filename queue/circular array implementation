class Queue:
    def __init__(self,cap):
        self.cap = cap
        self.q = [None]*cap
        self.front = 0
        self.size = 0
    
    def getFront(self):
        if self.isEmpty():
            return -1
        else:
            return self.front
    
    def getRear(self):
        if self.isEmpty():
            return -1
        else:
            return (self.front+self.size-1)%self.cap
    
    def enque(self,x):
        if self.isFull():
            return -1
        rear = self.getRear()
        rear = (rear+1)%self.cap
        self.q[rear] = x
        self.size +=1
    
    def deque(self):
        if self.isEmpty():
            return None
        res = self.q[self.front]
        self.q.pop(0)
        front = (self.front+1)%self.cap
        self.size-=1
        
        return res
    
    def isEmpty(self):
        return self.size == 0
    def isFull(self):
        return self.size == self.cap
    def print(self):
        for i in range(self.size):
            print(self.q[i])
        
        
q = Queue(3)
q.enque(10)
q.enque(20)
q.enque(30)


print(q.deque())
print(q.deque())

q.print()
    
        
